app:
  name: catalogV1.12
  type: docker-compose
  domain: catalogv1-12-u23037.vm.elestio.app
  branch: develop
  buildCommand: |
    # Install frontend dependencies and build
    cd frontend
    npm ci
    npm run build
    
    # Install backend dependencies
    cd ../backend
    pip install -r requirements.txt

  postDeployCommand: |
    # Run database migrations
    docker-compose exec -T backend alembic upgrade head
    
    # Initialize MinIO bucket
    docker-compose exec -T backend python -c "
    from app.core.database import init_minio
    init_minio()
    "

variables:
  - name: POSTGRES_USER
    value: catalog_user
    description: PostgreSQL database user
    required: true
    
  - name: POSTGRES_PASSWORD
    value: catalog_password
    description: PostgreSQL database password
    required: true
    secret: true
    
  - name: POSTGRES_DB
    value: catalog_db
    description: PostgreSQL database name
    required: true
    
  - name: MINIO_ROOT_USER
    value: minioadmin
    description: MinIO root user
    required: true
    
  - name: MINIO_ROOT_PASSWORD
    value: minioadmin
    description: MinIO root password
    required: true
    secret: true
    
  - name: JWT_SECRET_KEY
    value: your-production-secret-key-here
    description: JWT secret key for authentication
    required: true
    secret: true

  - name: DOMAIN
    value: catalogv1-12-u23037.vm.elestio.app
    description: Application domain
    required: true

services:
  frontend:
    port: 3000
    env_file: frontend/.env.production
    environment:
      - VITE_API_URL=https://${DOMAIN}/api
      - VITE_PUBLIC_URL=https://${DOMAIN}

  backend:
    port: 8000
    env_file: backend/.env.production
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_URL=minio:9000
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - BACKEND_CORS_ORIGINS=["https://${DOMAIN}"]

  postgres:
    port: 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    port: 6379
    volumes:
      - redis_data:/data

  minio:
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data

volumes:
  postgres_data:
    name: catalog_postgres_data
  redis_data:
    name: catalog_redis_data
  minio_data:
    name: catalog_minio_data

reverseProxy:
  - path: /
    target: http://frontend:3000
  - path: /api
    target: http://backend:8000
    stripPrefix: true
  - path: /minio
    target: http://minio:9000
    stripPrefix: true
  - path: /minio-console
    target: http://minio:9001
    stripPrefix: true

nginx:
  recreateConfig: true
  customConfig: |
    # Load configuration from our production nginx config
    include /etc/nginx/conf.d/nginx.prod.conf;

monitoring:
  - name: Frontend Health
    url: https://${DOMAIN}
    interval: 30s
    
  - name: Backend Health
    url: https://${DOMAIN}/api/health
    interval: 30s
    
  - name: MinIO Console
    url: https://${DOMAIN}:9001
    interval: 30s

backup:
  - name: Database Backup
    source: /var/lib/postgresql/data
    schedule: "0 0 * * *"
    retention: 7
    
  - name: MinIO Backup
    source: /data/minio
    schedule: "0 0 * * *"
    retention: 7

maintenance:
  update_schedule: "0 2 * * 0"  # Every Sunday at 2 AM
  auto_update: false
