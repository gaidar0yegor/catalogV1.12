version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: catalog-backend
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
      - POSTGRES_HOST=${PGHOST}
      - POSTGRES_PORT=${PGPORT}
      - REDIS_HOST=${REDISHOST}
      - REDIS_PORT=${REDISPORT}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=production
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - catalog-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: catalog-frontend
    ports:
      - "80:80"
    environment:
      - VITE_API_URL=/api/v1
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - catalog-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: catalog-postgres
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
    networks:
      - catalog-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: catalog-redis
    networks:
      - catalog-network
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: catalog-minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    networks:
      - catalog-network
    restart: unless-stopped

networks:
  catalog-network:
    driver: bridge
